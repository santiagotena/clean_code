// To implement //
[x] Parsing
    [x] argc
    [x] non-negative t
    [x] positive k
    [x] ls are all positive and at least one element
[x] choose_best_sum();
    [x] Return -1 in case of number_of_towns < size of list_of_distance
    [x] Return -1 in case of failure
    [x] Make it functional
[x] Print results
    [x] Informs in case of failure
    [x] Max distance
[x] Free memory
    [x] list_of_cities

// Post-implementation //
[x] Testing
    [x] Run tests
    [x] Test leaks
[x] Refactor
[x] Testing
    [x] Run tests
    [x] Test leaks
[x] Evaluate Red Principles

// Tests to run //
// Regular tests
./best_travel 174 3 50 55 57 58 60
./best_travel 163 3 50 55 56 57 58
./best_travel 163 3 50
./best_travel 230 3 91 74 73 85 73 81 87

Max distance: 173
Max distance: 163
Error: There were not enough distances provided.
Max distance: 228

// Parsing error conditions
./best_travel
./best_travel -1 3 91 74 73 85 73 81 87
./best_travel 230 0 91 74 73 85 73 81 87
./best_travel 230 3 91 74 73 85 73 -81 87

Error: Invalid number of arguments.
Error: The maximum sum of distances must be at least zero.
Error: The number of towns to visit must be at least 1.
Error: No negative numbers are allowed in the distances list.